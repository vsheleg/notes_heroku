{"version":3,"sources":["client/services/apiService/index.js","client/services/note.service.js","client/components/NoteList/Note/Note.js","client/components/NoteList/NoteList.js","client/components/Button/AddButton.js","client/components/App.js","client/services/user.service.js","client/pages/login/login.js","client/pages/signup/signup.js","client/pages/Header.js","index.js","client/pages/Main.js"],"names":["BASEURI","KEY","request","path","a","params","localStorage","getItem","token","fetch","headers","Authorization","then","response","status","json","error","get","url","post","data","method","body","JSON","stringify","deleteData","ROUTES","addNote","content","deleteNote","title","editNote","loadNote","loadAllNotes","Note","note","onDelete","useState","editInput","setEditInput","setContent","textInput","useRef","newValue","current","value","noteService","val","useEffect","className","id","type","onClick","name","ref","NoteList","notes","onAdd","onEdit","listNotes","map","elem","key","AddButton","textInputRef","placeholder","App","setNotes","redirect","setRedirect","filter","concat","alert","statusText","to","from","signup","user","login","validateAllFields","username","password","confirmedPassword","email","Signin","passwordRef","emailRef","onload","clear","onSubmit","e","preventDefault","service","setItem","class","Signup","usernameRef","confirmedPasswordRef","onLoad","message","Header","rootElement","document","getElementById","ReactDOM","render","exact"],"mappings":"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","file":"static/js/main.c2dee13e.chunk.js","sourcesContent":["const BASEURI = \"https://calm-river-32384.herokuapp.com/\";\r\nconst KEY = \"note-token\";\r\n\r\nasync function request(path, params = {}) {\r\n  const token = await localStorage.getItem(KEY);\r\n  return fetch(BASEURI + path, {\r\n    ...params,\r\n    headers: {\r\n      Authorization: token,\r\n      \"Content-Type\": \"application/json\",\r\n      ...(params.headers || {})\r\n    }\r\n  }).then(response => {\r\n    if (response.status !== 403) {\r\n      return response.json();\r\n    } else {\r\n      return { error: response };\r\n    }\r\n  });\r\n}\r\nfunction deleteData(url) {\r\n  return request(url, {\r\n    method: \"delete\"\r\n  });\r\n}\r\n\r\nfunction get(url) {\r\n  return request(url);\r\n}\r\n\r\nfunction post(url, data) {\r\n  return request(url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data)\r\n  });\r\n}\r\n\r\nexport default { get, post, deleteData };\r\n","import request from \"./apiService/index\";\r\nconst ROUTER_PREFIX = \"notes\";\r\nconst ROUTES = {\r\n  READ: \"/read\",\r\n  LOADAll: \"/readAll\",\r\n  EDIT: \"/edit\",\r\n  DELETE: \"/delete\",\r\n  ADD: \"/add\"\r\n};\r\n\r\nfunction addNote(content) {\r\n  return request.post(ROUTER_PREFIX + ROUTES.ADD, content);\r\n}\r\n\r\nfunction loadAllNotes() {\r\n  return request.get(ROUTER_PREFIX + ROUTES.LOADAll);\r\n}\r\nfunction loadNote(title) {\r\n  return request.get(ROUTER_PREFIX + ROUTES.READ + \"/\" + title);\r\n}\r\nfunction editNote(content, title) {\r\n  return request.post(ROUTER_PREFIX + ROUTES.EDIT + \"/\" + title, content);\r\n}\r\n\r\nfunction deleteNote(title) {\r\n  return request.deleteData(ROUTER_PREFIX + ROUTES.DELETE + \"/\" + title);\r\n}\r\n\r\nexport default { addNote, deleteNote, editNote, loadNote, loadAllNotes };\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport noteService from \"../../../services/note.service\";\r\nimport \"./Note.css\";\r\nimport \"../../../pages/signup/signup.css\";\r\n\r\nexport default function Note({ note, onDelete }) {\r\n  const [editInput, setEditInput] = useState(false);\r\n  const [content, setContent] = useState(\"\");\r\n  const textInput = useRef(null);\r\n\r\n  const updateItems = () => {\r\n    noteService.loadNote(note).then(setContent);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateItems();\r\n  }, [editInput]);\r\n\r\n  function deleteItem() {\r\n    onDelete(note);\r\n  }\r\n\r\n  async function editItem() {\r\n    if (editInput) {\r\n      const newValue = textInput.current.value;\r\n      await noteService.editNote({ val: newValue }, note);\r\n      setContent(newValue);\r\n      setEditInput(false);\r\n    } else {\r\n      setEditInput(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"note\">\r\n        <span id=\"title\">{note}</span>\r\n        <hr id=\"title-line\" />\r\n        <div className=\"note-content\">{content}</div>\r\n        <input type=\"button\" onClick={deleteItem} name=\"delete\" />\r\n        <input type=\"button\" onClick={editItem} name=\"edit\" />\r\n        {editInput ? (\r\n          <input type=\"text\" name=\"editNote\" id=\"editNote\" ref={textInput} />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Note/Note.css\";\r\nimport Note from \"./Note/Note\";\r\n\r\nfunction NoteList({ notes, onDelete, onAdd, onEdit }) {\r\n  const listNotes = notes.map(elem => (\r\n    <li key={elem}>\r\n      <Note note={elem} onDelete={onDelete} onAdd={onAdd} onEdit={onEdit} />\r\n    </li>\r\n  ));\r\n  return <ul>{listNotes}</ul>;\r\n}\r\n\r\nexport default NoteList;\r\n","import React, { useRef } from \"react\";\r\nimport \"./AddButton.css\";\r\n\r\nexport default function AddButton({ onAdd }) {\r\n  const textInputRef = useRef(null);\r\n\r\n  function addNote() {\r\n    onAdd(textInputRef.current.value);\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          className=\"login\"\r\n          placeholder=\"Add new item\"\r\n          type=\"text\"\r\n          id=\"addNote\"\r\n          name=\"addNote\"\r\n          ref={textInputRef}\r\n        />\r\n        <input\r\n          id=\"plus\"\r\n          type=\"button\"\r\n          className=\"primary\"\r\n          onClick={addNote}\r\n          value=\"+\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport NoteList from \"./NoteList/NoteList\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AddButton from \"./Button/AddButton\";\r\nimport \"./App.css\";\r\nimport noteService from \"../services/note.service.js\";\r\n\r\nexport default function App({}) {\r\n  const [notes, setNotes] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const updateItems = () => {\r\n    let result = noteService.loadAllNotes();\r\n    result.then(response => {\r\n      if (response.error) {\r\n        alert(response.error.statusText); //Forbidden\r\n        setRedirect(true); //redirects to login\r\n      } else {\r\n        setNotes(response);\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    updateItems();\r\n  }, [redirect]);\r\n\r\n  async function deleteNote(note) {\r\n    await noteService.deleteNote(note);\r\n    setNotes(notes.filter(elem => elem !== note));\r\n  }\r\n\r\n  async function addNote(note) {\r\n    const elem = await noteService.addNote({ value: note });\r\n    setNotes(notes.concat(elem.note.id));\r\n  }\r\n  function logout() {\r\n    setRedirect(true);\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/login\" from=\"/notes\" />;\r\n  }\r\n  return (\r\n    <div id=\"container\">\r\n      <input\r\n        type=\"button\"\r\n        onClick={logout}\r\n        name=\"exit\"\r\n        className=\"primary\"\r\n        id=\"logout\"\r\n      />\r\n      <AddButton onAdd={addNote} />\r\n\r\n      <NoteList notes={notes} onDelete={deleteNote} />\r\n    </div>\r\n  );\r\n}\r\n","import request from \"./apiService/index\";\r\nconst ROUTER_PREFIX = \"user\";\r\n\r\nconst ROUTES = {\r\n  LOGIN: \"/login\",\r\n  SIGNUP: \"/signup\"\r\n};\r\n\r\nfunction login(user) {\r\n  let result = request.post(ROUTER_PREFIX + ROUTES.LOGIN, user);\r\n  return result;\r\n}\r\n\r\nfunction signup(user) {\r\n  let result = request.post(ROUTER_PREFIX + ROUTES.SIGNUP, user);\r\n  return result;\r\n}\r\n\r\nfunction validateAllFields(user) {\r\n  if (\r\n    !user.username ||\r\n    !user.password ||\r\n    !user.confirmedPassword ||\r\n    !user.email\r\n  ) {\r\n    return false;\r\n  }\r\n  if (user.confirmedPassword !== user.password) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default { signup, login, validateAllFields };\r\n","import React, { useState, useRef } from \"react\";\r\nimport service from \"../../services/user.service\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../main.css\";\r\nimport \"./login.css\";\r\nconst KEY = \"note-token\";\r\n\r\nexport default function Signin({}) {\r\n  const passwordRef = useRef(null);\r\n  const emailRef = useRef(null);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const loginPromise = service.login({\r\n      password: passwordRef.current.value,\r\n      email: emailRef.current.value\r\n    });\r\n    loginPromise.then(response => {\r\n      localStorage.setItem(KEY, response.token);\r\n      setRedirect(response.redirect);\r\n    });\r\n  }\r\n  if (redirect) {\r\n    return <Redirect to=\"/notes\" from=\"/login\" />;\r\n  }\r\n  return (\r\n    <div id=\"form-login\" onload={localStorage.clear()}>\r\n      <form onSubmit={handleSubmit} method=\"post\">\r\n        <p id=\"form-header\">Login</p>\r\n        <hr />\r\n        <input\r\n          className=\"login\"\r\n          type=\"email\"\r\n          placeholder=\"E-mail\"\r\n          name=\"email\"\r\n          ref={emailRef}\r\n        />\r\n        <br />\r\n        <input\r\n          className=\"login\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          ref={passwordRef}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"submit\"\r\n          class=\"primary login\"\r\n          id=\"login-btn\"\r\n          value=\"Sign in\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport service from \"../../services/user.service\";\r\nimport \"../main.css\";\r\nimport \"./signup.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function Signup({}) {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const passwordRef = useRef(null);\r\n  const usernameRef = useRef(null);\r\n  const emailRef = useRef(null);\r\n  const confirmedPasswordRef = useRef(null);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const user = {\r\n      username: usernameRef.current.value,\r\n      password: passwordRef.current.value,\r\n      email: emailRef.current.value,\r\n      confirmedPassword: confirmedPasswordRef.current.value\r\n    };\r\n    const isValidInput = service.validateAllFields(user);\r\n\r\n    if (isValidInput) {\r\n      const signupPromise = service.signup(user);\r\n      signupPromise.then(response => {\r\n        if (response.message) {\r\n          //if user with such params already exists\r\n          alert(response.message);\r\n        }\r\n        setRedirect(response.redirect);\r\n      });\r\n    } else {\r\n      alert(\"Fill all fields, please\");\r\n    }\r\n  }\r\n  if (redirect) {\r\n    return <Redirect to=\"/login\" from=\"/signup\" />;\r\n  }\r\n  return (\r\n    <div id=\"form-registration\" onLoad={localStorage.clear()}>\r\n      <form onSubmit={handleSubmit} method=\"post\">\r\n        <p id=\"form-header\">Register</p>\r\n        <hr />\r\n        <input\r\n          className=\"signup\"\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          name=\"username\"\r\n          ref={usernameRef}\r\n        />\r\n        <br />\r\n        <input\r\n          className=\"signup\"\r\n          type=\"email\"\r\n          placeholder=\"E-mail\"\r\n          name=\"email\"\r\n          ref={emailRef}\r\n        />\r\n        <br />\r\n        <input\r\n          className=\"signup\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          ref={passwordRef}\r\n        />\r\n        <br />\r\n        <input\r\n          className=\"signup\"\r\n          type=\"password\"\r\n          placeholder=\"Confirm password\"\r\n          name=\"confirmPassword\"\r\n          ref={confirmedPasswordRef}\r\n        />\r\n        <br />\r\n        <input type=\"submit\" class=\"primary\" id=\"signup-btn\" value=\"Sign up\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport \"./main.css\";\r\n\r\nexport default function Header({}) {\r\n  return (\r\n    <ul class=\"nav\">\r\n      <li>\r\n        <Link className=\"link\" to=\"/signup\">\r\n          Sign up\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link className=\"link\" to=\"/login\">\r\n          Sign in\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Main from \"./client/pages/Main\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Main />, rootElement);\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport App from \"../components/App\";\r\nimport Signin from \"./login/login\";\r\nimport Signup from \"./signup/signup\";\r\nimport Header from \"./Header\";\r\nimport \"./main.css\";\r\n\r\nexport default function Main({}) {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/signup\">\r\n          <Signup />\r\n        </Route>\r\n        <Route exact path=\"/login\">\r\n          <Signin />\r\n        </Route>\r\n        <Route path=\"/notes\">\r\n          <App />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}